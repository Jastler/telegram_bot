import { Context } from "telegraf";
import {
  createTelegramUid,
  generateCustomToken,
} from "../../services/user.service.js";
import { env } from "../../config/env.js";

/**
 * –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /auth - –æ—Ç—Ä–∏–º–∞–Ω–Ω—è Custom Token
 */
export async function handleAuth(ctx: Context): Promise<void> {
  try {
    const telegramUser = ctx.from;
    if (!telegramUser) {
      await ctx.reply("‚ùå –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");
      return;
    }

    const uid = createTelegramUid(telegramUser.id);
    const customToken = await generateCustomToken(uid);

    await ctx.reply(
      `üîë –í–∞—à Custom Token –≥–æ—Ç–æ–≤–∏–π!\n\n` +
        `Token: \`${customToken}\`\n\n` +
        `‚ö†Ô∏è –¢–æ–∫–µ–Ω –¥—ñ–π—Å–Ω–∏–π 1 –≥–æ–¥–∏–Ω—É. –ù–µ –¥—ñ–ª—ñ—Ç—å—Å—è –Ω–∏–º –∑ —ñ–Ω—à–∏–º–∏.`,
      { parse_mode: "Markdown" }
    );

    console.log(`‚úÖ Custom Token –≤–∏–¥–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É: ${uid}`);
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ç–æ–∫–µ–Ω–∞:", error);
    await ctx.reply("‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ç–æ–∫–µ–Ω–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ.");
  }
}
