import { Context } from "telegraf";
import { env } from "../../config/env.js";

/**
 * –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /subscription
 */
export async function handleSubscription(ctx: Context): Promise<void> {
  try {
    const subscriptionText = `
üåü **Premium Subscription**

Unlock unlimited possibilities with our premium subscription!

‚ú® **What you get:**
‚Ä¢ üí¨ Unlimited conversations with AI
‚Ä¢ üé® AI image generation without limits
‚Ä¢ üöÄ Priority access to new features
‚Ä¢ üì± Advanced customization options
‚Ä¢ üî• Exclusive premium content
‚Ä¢ üíé VIP support and faster responses

üí∞ **Price:** 1 Telegram Star per month
‚è∞ **Billing:** Automatic monthly renewal

Ready to upgrade your experience? Click the button below to subscribe!

*Cancel anytime - no hidden fees or commitments.*
`;

    const subscriptionKeyboard = {
      inline_keyboard: [
        [
          {
            text: "‚≠ê Subscribe for 1 Star/month",
            callback_data: "subscribe_premium",
          },
        ],
        [
          {
            text: "üìã View Benefits",
            callback_data: "view_benefits",
          },
          {
            text: "‚ùì Help",
            callback_data: "subscription_help",
          },
        ],
      ],
    };

    await ctx.reply(subscriptionText, {
      parse_mode: "Markdown",
      reply_markup: subscriptionKeyboard,
    });
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ /subscription:", error);
    await ctx.reply("‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ.");
  }
}

/**
 * –û–±—Ä–æ–±–Ω–∏–∫ callback –∫–Ω–æ–ø–æ–∫ –¥–ª—è –ø—ñ–¥–ø–∏—Å–∫–∏
 */
export async function handleSubscriptionCallback(ctx: Context): Promise<void> {
  const callbackData = (ctx.callbackQuery as any)?.data;

  switch (callbackData) {
    case "subscribe_premium":
      await handleSubscribePremium(ctx);
      break;
    case "view_benefits":
      await handleViewBenefits(ctx);
      break;
    case "subscription_help":
      await handleSubscriptionHelp(ctx);
      break;
    default:
      await ctx.answerCbQuery("Unknown action");
  }
}

/**
 * –û–±—Ä–æ–±–Ω–∏–∫ –ø—ñ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø—Ä–µ–º—ñ—É–º
 */
async function handleSubscribePremium(ctx: Context): Promise<void> {
  try {
    // –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω–≤–æ–π—Å –¥–ª—è –ø—ñ–¥–ø–∏—Å–∫–∏
    const invoice = {
      title: "Premium Subscription",
      description:
        "Unlimited AI conversations, image generation, and premium features",
      payload: `subscription_premium_${ctx.from?.id}`,
      provider_token: env.botToken, // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ bot token —è–∫ provider token
      currency: "XTR", // Telegram Stars
      prices: [
        {
          label: "Premium Subscription (1 month)",
          amount: 1, // 1 Telegram Star
        },
      ],
      subscription_period: 30 * 24 * 60 * 60, // 30 –¥–Ω—ñ–≤ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
      recurring: true,
    };

    await ctx.replyWithInvoice(invoice);
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–≤–æ–π—Å—É:", error);
    await ctx.answerCbQuery(
      "‚ùå Error creating subscription. Please try again."
    );
  }
}

/**
 * –û–±—Ä–æ–±–Ω–∏–∫ –ø–µ—Ä–µ–≥–ª—è–¥—É –ø–µ—Ä–µ–≤–∞–≥
 */
async function handleViewBenefits(ctx: Context): Promise<void> {
  const benefitsText = `
üéØ **Detailed Benefits:**

üí¨ **Unlimited Conversations**
‚Ä¢ No daily limits on AI chats
‚Ä¢ Extended conversation history
‚Ä¢ Advanced context understanding

üé® **AI Image Generation**
‚Ä¢ Generate unlimited images
‚Ä¢ High-resolution outputs
‚Ä¢ Multiple art styles available
‚Ä¢ Custom prompts and settings

üöÄ **Priority Features**
‚Ä¢ Early access to new AI models
‚Ä¢ Beta features and testing
‚Ä¢ Advanced customization options
‚Ä¢ Faster response times

üì± **Premium Interface**
‚Ä¢ Custom themes and layouts
‚Ä¢ Advanced settings panel
‚Ä¢ Export conversations
‚Ä¢ Priority support queue

üíé **Exclusive Content**
‚Ä¢ Premium AI models
‚Ä¢ Specialized tools and utilities
‚Ä¢ Educational content and tutorials
‚Ä¢ Community access
`;

  await ctx.answerCbQuery();
  await ctx.reply(benefitsText, { parse_mode: "Markdown" });
}

/**
 * –û–±—Ä–æ–±–Ω–∏–∫ –¥–æ–ø–æ–º–æ–≥–∏ –∑ –ø—ñ–¥–ø–∏—Å–∫–æ—é
 */
async function handleSubscriptionHelp(ctx: Context): Promise<void> {
  const helpText = `
‚ùì **Subscription Help:**

üîπ **How to Subscribe:**
1. Click "Subscribe for 1 Star/month"
2. Complete payment with Telegram Stars
3. Enjoy premium features immediately!

üîπ **Billing:**
‚Ä¢ Monthly automatic renewal
‚Ä¢ Cancel anytime from Telegram settings
‚Ä¢ No hidden fees or charges

üîπ **Payment:**
‚Ä¢ Uses Telegram Stars only
‚Ä¢ Secure payment processing
‚Ä¢ Instant activation

üîπ **Cancellation:**
‚Ä¢ Go to Telegram Settings ‚Üí Payments
‚Ä¢ Find your subscription
‚Ä¢ Cancel anytime, no penalties

Need more help? Contact our support team!
`;

  await ctx.answerCbQuery();
  await ctx.reply(helpText, { parse_mode: "Markdown" });
}
