import axios from "axios";
import { env } from "../config/env.js";

/**
 * –°–µ—Ä–≤—ñ—Å –¥–ª—è –ø—Ä—è–º–æ–≥–æ –≤–∏–∫–ª–∏–∫—É Telegram Bot API
 */
export class TelegramApiService {
  private readonly botToken: string;
  private readonly baseUrl: string;

  constructor() {
    this.botToken = env.botToken;
    this.baseUrl = `https://api.telegram.org/bot${this.botToken}`;
  }

  /**
   * –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —ñ–Ω–≤–æ–π—Å—É —á–µ—Ä–µ–∑ sendInvoice API
   */
  async sendInvoice(chatId: number, invoice: any): Promise<any> {
    try {
      const response = await axios.post(`${this.baseUrl}/sendInvoice`, {
        chat_id: chatId,
        ...invoice,
      });

      if (response.data.ok) {
        return response.data.result;
      } else {
        throw new Error(`Telegram API error: ${response.data.description}`);
      }
    } catch (error) {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —ñ–Ω–≤–æ–π—Å—É:", error);
      throw error;
    }
  }

  /**
   * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Bot subscription —ñ–Ω–≤–æ–π—Å—É
   */
  async createBotSubscriptionInvoice(
    chatId: number,
    title: string,
    description: string,
    payload: string,
    amount: number
  ): Promise<any> {
    const invoice = {
      title,
      description,
      payload,
      provider_token: "", // –î–ª—è Telegram Stars
      currency: "XTR",
      prices: [
        {
          label: "Premium Subscription (1 month)",
          amount: amount,
        },
      ],
      // –û–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–ª—è Bot subscription
      subscription_period: 30 * 24 * 60 * 60, // 30 –¥–Ω—ñ–≤ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
      recurring: true,
    };

    console.log("üìã –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Bot subscription —ñ–Ω–≤–æ–π—Å—É:", invoice);

    return await this.sendInvoice(chatId, invoice);
  }
}

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ —ñ–Ω—Å—Ç–∞–Ω—Å —Å–µ—Ä–≤—ñ—Å—É
export const telegramApi = new TelegramApiService();
